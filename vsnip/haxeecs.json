{
  "ClassMessage": {
    "prefix": ["classMessage"],
    "body": [
      "package ${1:world.messages};",
      "",
      "class ${2:$TM_FILENAME_BASE} extends zf.Message {",
      "\tpublic static final MessageType = \"$2\";",
      "",
      "\tpublic function new() {",
      "\t\tsuper(MessageType);",
      "\t}",
      "}"
    ],
    "description": "Create a message class from template."
  },
  "ClassSystem": {
    "prefix": ["classSystem"],
    "body": [
      "package ${1:world.systems};",
      "",
      "class ${2:$TM_FILENAME_BASE} extends zf.ecs.System {",
      "",
      "\tvar world: World;",
      "\tpublic function new() {",
      "\t\tsuper();",
      "\t}",
      "",
      "\toverride public function init(world: zf.ecs.World) {",
      "\t\tthis.world = cast(world, World);",
      "\t\tfinal dispatcher = this.world.dispatcher;",
      "\t}",
      "}"
    ],
    "description": "Create a system class from template."
  },
  "ClassComponent": {
    "prefix": ["classComponent"],
    "body": [
      "package ${1:world.components};",
      "",
      "class ${2:$TM_FILENAME_BASE} extends zf.ecs.Component {",
      "\tpublic static final ComponentType = \"$2\";",
      "\toverride public function get_type(): String {",
      "\t\treturn ComponentType;",
      "\t}",
      "",
      "\tpublic static function get(e: ${3:zf.ecs.DynamicEntity}): $2 {",
      "\t\tfinal c = e.getComponent(ComponentType);",
      "\t\treturn c == null ? null : cast(c, $2);",
      "\t}",
      "",
      "\tpublic static function exists(e: $3): Bool {",
      "\t\treturn e.getComponent(ComponentType) != null;",
      "\t}",
      "",
      "\toverride public function toString(): String {",
      "\t\treturn '{c:$2}';",
      "\t}",
      "}"
    ],
    "description": "Create a component class from template"
  },
  "ListenMessage": {
    "prefix": ["mListen", "dispatcher.listen"],
    "body": [
      "// @:listen $TM_FILENAME_BASE ${1:Message} ${2:0} $4",
      "${3:dispatcher}.listen($1.MessageType, (message: zf.Message) -> {",
      "\tfinal m = cast(message, $1);",
      "}, $2);"
    ],
    "description": ""
  },
  "SaveLoad": {
    "prefix": ["saveload"],
    "body": [
      "/** Saving loading code **/",
      "",
      "// save",
      "public function toSaveStruct(context: SaveLoadContext): Dynamic {",
      "\tfinal sf: ${2:$TM_FILENAME_BASE}SF = {",
      "\t}",
      "\treturn sf;",
      "}",
      "",
      "// load",
      "public function fromSaveStruct(context: SaveLoadContext, data: Dynamic): Bool {",
      "\tfinal sf: ${2:$TM_FILENAME_BASE}SF = data;",
      "\treturn true;",
      "}"
    ],
    "descipriont": ""
  },
  "LoadDice": {
    "prefix": ["loadDice"],
    "body": [
		  "action.${1}Region.loadDice([for (id in sf.$1.dice) cast(context.get(id), Die)]);"
    ]
  }
}

snippet classMessage
package ${1:world.messages};

class ${2:`!p snip.rv = snip.basename`} extends common.Message {
	public static final TYPE = "$2";

	override public function get_type(): String {
		return TYPE;
	}

	public function new() {
		super();
	}
}
endsnippet

snippet classSystem
package ${1:world.systems};

class ${2:`!p snip.rv = snip.basename`} extends common.ecs.System<${3:Entity}> {

	var world: World;
	public function new() {
		super();
	}

	override public function init(world: common.ecs.World<Entity>) {
		this.world = cast(world, World);
	}
}
endsnippet

snippet mListen
${1:dispatcher}.listen(${2:Message}.TYPE, function(message: common.Message) {
	var m = cast(message, $2);
});
endsnippet

